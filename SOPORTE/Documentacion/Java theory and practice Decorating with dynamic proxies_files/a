mmcore.SetCookie('mmid','674943021|AQAAAArh1nUFIQwAAA==',365,1);mmcore.SetCookie('pd','-76299507|AQAAAAoBQuHWdQUhDKkb0RkBAAlnYh7Ig9JIDwAAAAlnYh7Ig9JIAAAAALYAAAD/////ABB3d3cuZ29vZ2xlLmNvLnZlBCEMAQAAAAAAAAAAAACAigAA/4wAAP////8AAAAAAAFF',365);mmcore.SetCookie('srv','nycvwcgus04',365);(function(){if(typeof(mmcore.GenInfo)!='object')mmcore.GenInfo={};mmcore.EH=function(e){var s=e.message+'\r\n';if(!window.mm_error)window.mm_error=s;else window.mm_error+=s;};
try{
mmcore._IntegrationFactory=mmcore._IntegrationFactory||function(e){var t=mmcore._IntegrationFactory,n=function(e){mmcore.EH({message:"["+(r?r:"Integration")+"] "+e})};if(!e||!e.name)return n("Missing build parameters.");var r=e.name,i=e.validate,s=e.check,o=e.timeout||1e4,u=e.interval||50,a=e.exec,f=e.defaults||{};if(!r)return n("Invalid integration build, name is required.");if(!a)return n("Invalid integration build, exec is required.");t._version="1.0.6";if(t[r])return t[r];var l=function(r){r=typeof r=="object"?r:{};for(var l in this.defaults)r.hasOwnProperty(l)||(r[l]=this.defaults[l]);for(var c in f)r.hasOwnProperty(c)||(r[c]=f[c]);r._verifyVersion=function(e){var n=t._version.match(/\d+/g),r=e.match(/\d+/g),i=Math.max(n.length,r.length);for(var s=0;s<i;s++)if(+n[s]<+r[s])return!1;return!0};if(r.campaign){var h=mmcore.GenInfo[r.campaign];if(r.redirect)if(h){for(var p in h);if(h[p].toLowerCase()!="default")return mmcore.SetCookie("mm_redir_"+r.campaign,JSON.stringify(h),0,1)}else try{h=JSON.parse(mmcore.GetCookie("mm_redir_"+r.campaign,1))}catch(d){}if(!h)return n("Campaign not found: "+r.campaign);var v=[],m=[],g=[];for(var y in h){var b=h[y];m.push(y),g.push(b),v.push(y+":"+b)}r.campaignInfo=v=r.campaign+"="+v.join("|"),r.elements=m,r.variants=g}r.isProduction=function(){var e=["cfgid","opc.enabled","opc.vis","pt.enabled","un"];for(var t=0;t<e.length;t++)if(!!mmcore.GetParam(e[t]))return!1;return!0}();if(i){var w=i.call(e,r);if(w!==!0)return n("Data validation failed: "+w)}var E=function(){var t=a.call(e,r);t!==!0&&n("Execution failed: "+t)};if(s)if(s.call(e,r))E();else{var S=!1,x=setInterval(function(){s.call(e,r)&&(clearInterval(x),S=!0,E())},r.interval||u);mmcore.AddDocLoadHandler(function(){setTimeout(function(){if(S)return;clearInterval(x);var e="Integration timed out. Checks not passed.";"function"==typeof r.fail&&r.fail(e),n(e)},r.timeout||o)})}else E()};return l._version=e._version,l.defaults={},mmcore._IntegrationFactory[r]=l,l},mmcore.Integrate=function(e,t){var n=mmcore._IntegrationFactory[e];n?n.call(n,t):mmcore.EH({message:"Integration not installed: "+e})}
}catch(err){mmcore.EH(err);}
try{
function fixDocLoad(){
    mmcore._docEnd = true;
    for(var i = 0; i < mmcore._docEndF.length; i++){
        try {
            mmcore._docEndF[i] && mmcore._docEndF[i]();
        } catch (e) { }
    }
    mmcore._docEndF = [];  
}

if(/Firefox/.test(navigator.userAgent) || /Trident/.test(navigator.userAgent)){
    if (window.jQuery) {
        jQuery(document).ready(function() {
            fixDocLoad();
        });
    } else if (document.body) {
        fixDocLoad();
    } else if (window.dojo) {
        dojo.require(["dojo/domReady!"], function() {
            fixDocLoad();
        });
    }
}
}catch(err){mmcore.EH(err);}
try{
;(function () {
	mmcore.snippets = mmcore.snippets || {};
	mmcore.snippets.EventManager = function () {
		var eventPool = {};
		var eventListeners = {};
		this.trigger = function (event_type, event_data, callback) {
			eventPool[event_type] = {
				event_data: event_data,
				callback: callback
			};
			eventListeners[event_type] = eventListeners[event_type] || [];
			for (var i = 0; i < eventListeners[event_type].length; i++) {
				try {
					eventListeners[event_type][i](event_data);
				} catch (e) {
					mmcore.EH && mmcore.EH(e);
				}
			}
			callback && callback();
		};
		this.on = function (event_type, callback) {
			var lastData = eventPool[event_type];
			if (lastData) {
				try {
					callback(lastData.event_data);
				} catch (e) {
					mmcore.EH && mmcore.EH(e);
				}
				setTimeout(function () {
					lastData.callback && lastData.callback();
					lastData.callback = null;
				}, 0);
			}
			eventListeners[event_type] = eventListeners[event_type] || [];
			eventListeners[event_type].push(callback);
		};
	};
	mmcore.snippets.EventManager.call(mmcore);
}());
}catch(err){mmcore.EH(err);}
try{
mmcore.NetInsight = function(campaign){
    if(!window.ibmStats || !ibmStats.event) return mmcore.EH({ message:"NetInsight: ibmStats.event missing." });
    var GI = mmcore.GenInfo[campaign];
    if(!GI) return mmcore.EH({ message:"NetInsight: Campaign " + campaign + " does not exist." });
    var pairs = [];
    for(var elem in GI) pairs.push(elem + ":" + GI[elem].toLowerCase());
    ibmStats.event({
        ibmEV: "Maxymiser",
        ibmEvName: campaign,
        ibmEvAction: pairs.join(" | ")
    });
};
}catch(err){mmcore.EH(err);}
try{
;(function(){
	function bind(el, func){
		if(el.addEventListener){
			el.addEventListener('beforeprint', func, false);
		}else if(el.attachEvent){
			el.attachEvent('onbeforeprint', func);
		}	
	}

	if(navigator.userAgent.match(/msie/i)){
		bind(window, function(){
			var nodes = document.getElementsByTagName('script');
			for(var i = nodes.length; i--;){
				if((nodes[i].id || '').match(mmcore.cprefix))
					nodes[i].removeAttribute('src');
			}
		});
	}
})();
}catch(err){mmcore.EH(err);}
try{
;(function(){
	var cookiecr = mmcore.GetCookie('mm_criteria_tt', 1) || false;

	mmcore.persCriteria = {
		TrafficType: '',
	};

	if(cookiecr){
		var mm_JSON = JSON.parse(cookiecr);
		for(var key in mm_JSON){
			if(typeof mmcore.persCriteria[key] != 'undefined'){
				mmcore.persCriteria[key] = mm_JSON[key];
			}
		}
	}

	var wlh = window.location.href;

	mmcore.getCriteria = function(){
        //Criteria should change its value every new session
		if (!mmcore.GetCookie('mm_session',1)){
			if (wlh.match(/&cmp=|\?cmp=/)) mmcore.persCriteria.TrafficType = 'DriveToTraffic';
			else mmcore.persCriteria.TrafficType = 'NotDriveToTraffic';
			mmcore.SetCookie('mm_session',1,0,1);
		}
	};
	mmcore.getCriteria();
	mmcore.SetCookie('mm_criteria_tt', JSON.stringify(mmcore.persCriteria), 0, 1);
	delete mmcore._vars.mm_criteria;
})();
}catch(err){mmcore.EH(err);}
try{
var CM=mmcore._IntegrationFactory({name:"CoreMetrics",typeMap:{element:"cmCreateElementTag",pageview:"cmCreatePageviewTag",productview:"cmCreateProductviewTag"},validate:function(e){if(!e.campaign)return"No campaign.";if(!window.sessionStorage)return"No sessionStorage available.";e.types||(e.types=["element"]);var t=e.types.push?e.types:[e.types];for(var n=0;n<t.length;n++)if(!this.typeMap[t[n]])return"Invalid tag type: "+t[n]+". Must be: element, pageview, or productview.";return!0},check:function(e){return window.cmCreateElementTag},exec:function(e){var t="mm_CM_"+e.campaign.replace(/\W/g,""),n=sessionStorage.getItem(t),r=(new Date).getTime();sessionStorage.setItem(t,r);if(n&&r-n<18e5)return mmcore.EH({message:"["+this.name+"] Not sending again in same session."}),!0;var i=e.campaignInfo.replace(/^.+?=/,""),s=e.types.push?e.types:[e.types];for(var o=0;o<s.length;o++){var u=s[o],a=[i],f=e.isProduction?"MM_Prod_":"MM_Sand_";u=="productview"&&a.push(i),a.push(f+e.campaign),window[this.typeMap[u]].apply(window,a)}return e.callback&&e.callback(),!0},_version:"1.0.1"})
}catch(err){mmcore.EH(err);}
try{
setTimeout(function(){
	var strings = [];
	for(var campaign in mmcore.GenInfo){
          	var elementValuesList = [];
		var variantsValuesList = [];
		for(var element in mmcore.GenInfo[campaign]){
			elementValuesList.push(element);
			variantsValuesList.push(mmcore.GenInfo[campaign][element].toLowerCase());
		}
		strings.push('maxycamp=' + campaign + '&maxyelement=' + elementValuesList.join(',') + '&maxyvar=' + variantsValuesList.join(','));
	}
	if(strings.length)
		window.NTPT_PGEXTRA = strings.join(';');
}, 0);

}catch(err){mmcore.EH(err);}
if(typeof mmcore._callback=='object'&&typeof mmcore._callback[1]=='function'){try{mmcore._callback[1]();}catch(err){mmcore.EH(err);}
finally{mmcore._callback[1]=null;}}
})();